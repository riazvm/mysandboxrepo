#
# VMware Cloud Automation Pipeline Sample
#
# Copyright 2019 VMware, Inc. All rights reserved
#
# The BSD-2 license (the "License") set forth below applies to all parts of the
# Cloud-automation-samples Code project. You may not use this file except in compliance
# with the License.
#
# BSD-2 License
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
# Redistributions of source code must retain the above copyright notice, this
# list of conditions and the following disclaimer.
# 
# Redistributions in binary form must reproduce the above copyright notice,
# this list of conditions and the following disclaimer in the documentation
# and/or other materials provided with the distribution.
# 
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.
#
---
runtime: "nodejs"
code: |
    var context = require("./context.js")
    let ip = "" ;
    const deploymentDet = context.getInput("deploymentDetails");
    const node = context.getInput("nodeName");
    
    //console.log(deploymentDet);
    
    const deployment = JSON.parse(deploymentDet);
    const resources = deployment.resources
    console.log("resources: " + resources.length);
    
    for(let i = 0; i < resources.length;i++){
    
        if(resources[i].name.indexOf(node) != -1){

            ip =  resources[i].properties.address
        
        }
    }

    context.setOutput("ipAddress", ip);

inputProperties:
  - name: deploymentDetails
    type: text
    title: deploymentDetails
    placeHolder: deploymentDetails
    bindable: true
    labelInfo: true
    labelMessage: parse deployment details to get IP
  - name: nodeName
    type: text
    title: nodeName
    placeHolder: nodeName
    bindable: true
    labelInfo: true
    labelMessage: resource node name
outputProperties:
  - name: ipAddress
    type: label
    title: IP Address